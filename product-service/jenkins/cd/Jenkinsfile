#!groovy
pipeline {

  agent any

  tools {
    jdk 'jdk 8'
    maven 'vmn 3.8'
  }

  stages {
    stage ('Build & Test') {
      steps {
        dir('product-service') {
          echo "build & test"
        }
      }
    }
    stage ('Get Latest Prod Version From Pact Broker') {
      steps {
        sh 'curl -LO https://github.com/pact-foundation/pact-ruby-standalone/releases/download/v1.88.83/pact-1.88.83-linux-x86_64.tar.gz'
        sh 'tar xzf pact-1.88.83-linux-x86_64.tar.gz'
        dir('pact/bin') {
          script {
            env.PROD_VERSION = sh(script: "./pact-broker describe-version -a ProductService -b http://localhost:9292 -l prod | tail -1 | cut -f 1 -d \\|", returnStdout: true).trim()
          }
        }
        dir('product-service') {
          script {
            if (env.PROD_VERSION == 'Pacticipant version not found') {
               dir('product-service') {
                 sh "mvn clean verify" +
                                   "-Dpact.provider.version=${GIT_COMMIT} " +
                                   "-Dpact.verifier.publishResults=true " +
                                   "-Dpactbroker.tags=prod,${params.pactConsumerTags}"
               }
            }
          }
        }
        echo "Current prod version: " + PROD_VERSION

      }
    }
    stage('Check Pact Verifications') {
      steps {
        dir('pact/bin') {
          sh "./pact-broker can-i-deploy -a ProductService -b http://localhost:9292 -e ${GIT_COMMIT}"
        }
      }
    }
    stage('Deploy') {
      when {
        branch 'master'
      }
      steps {
        echo 'Deploying to prod now...'
      }
    }
  }

}